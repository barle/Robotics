/*
 * Parameters.cpp
 *
 *  Created on: Jun 22, 2015
 *      Author: colman
 */

#include "Parameters.h"

Parameters::Parameters(const char *path) {
	ifstream file(path);
	while(file)
	{
		string line;
		getline(file, line);
		istringstream lineStream(line);
		string parameterName;
		getline(lineStream, parameterName, ':');
		string parameterValue;
		getline(lineStream, parameterValue, ':');

		_trim(parameterName);
		_trim(parameterValue);

		_params.insert(make_pair(parameterName, parameterValue));
	}

}

void Parameters::_trim(string str)
{
	// trim leading spaces
	while(str.length() &&
			(str.at(0) == ' ' || str.at(0) == 't' ||
					str.at(0) == '\r' || str.at(0) == '\n'))
	{
		str.erase(0, 1);
	}

	// trim trailing spaces
	while(str.length() &&
			(str.at(str.length()-1) == ' ' || str.at(str.length()-1) == '\t' ||
					str.at(str.length()-1) == '\r' || str.at(str.length()-1) == '\n'))
	{
		str.erase(str.length()-1, 1);
	}
}


string Parameters::map()
{
	return _params["map"];
}

Position Parameters::startLocation()
{
	string valueStr = _params["startLocation"];
	istringstream lineStream(valueStr);
	string xStr;
	getline(lineStream, xStr, ' ');
	string yStr;
	getline(lineStream, yStr, ' ');
	string yawStr;
	getline(lineStream, yawStr, ' ');

	_trim(xStr);
	_trim(yStr);
	_trim(yawStr);

	return new Position((double)xStr, (double)yStr, (double)yawStr);
}

Position Parameters::goal()
{
	string valueStr = _params["goal"];
	istringstream lineStream(valueStr);
	string xStr;
	getline(lineStream, xStr, ' ');
	string yStr;
	getline(lineStream, yStr, ' ');
	_trim(xStr);
	_trim(yStr);

	return new Position((double)xStr, (double)yStr);
}
	Size robotSize();
	double MapResolutionCM();
	double gridResolutionCM();

Parameters::~Parameters() {
	// TODO Auto-generated destructor stub
}

